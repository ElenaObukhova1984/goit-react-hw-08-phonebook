{"version":3,"file":"static/js/732.bc23c956.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.data.contacts;\n\nexport const selectFilter = state => state.filter.letters;\n\nexport const selectError = state => state.data.error;\n\nexport const selectIsLoading = state => state.data.isLoading;\n\nexport const selectVisibleContacts = createSelector(\n  [selectFilter, selectContacts],(filter, contacts) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\nheight: 30px;\nwidth:100px;\nmargin-top: 10px;\nborder-radius: 10px;\n`;\n","\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { Button } from './ContactItem.styled';\n\nconst ContactItem = ({ contact }) => {\nconst { name, phone } = contact;\nconst dispatch = useDispatch();\n\nconst handleDelete = () => dispatch(deleteContact(contact.id));\n\n  return (\n    <>\n      <p>{name}: {phone}</p>\n        <Button type='button' onClick={handleDelete}>\n        Delete\n      </Button>\n    </>\n  );\n};\n\n\n\nexport default ContactItem;","import styled from 'styled-components';\n\nexport const List= styled.ul`\nheight: 100px;\n\n`;\n\nexport const Item= styled.li`\ndisplay: flex;\ngap: 15px;\nalign-items: center;\n\n`;\n\n\nexport const Contact = styled.p`\ncolor:black;\nfont-weight:700;\n`;","import { useSelector } from 'react-redux';\nimport {selectContacts,\n  selectFilter,\n  selectVisibleContacts,\n} from 'redux/contacts/selectors.js';\nimport ContactItem from 'components/ContactItem';\nimport { List, Item } from './ContactList.styled';\n\n\n const ContactsList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return  (\n    <List>\n      {filter\n        ? visibleContacts.map(contact => (\n            <Item key={contact.id}>\n              <ContactItem contact={contact} />\n            </Item>\n          ))\n        : contacts.map(contact => (\n            <Item key={contact.id}>\n              <ContactItem contact={contact} />\n            </Item>\n          ))}\n    </List>\n  ) \n\n};\n\n\nexport default ContactsList;","import styled from 'styled-components';\n\nexport const Form = styled.form`\n\ndisplay:flex;\nflex-direction:column;\nwidth: 100%;\nheight: auto;\n`;\n\nexport const Input = styled.input`\nheight: 30px;\nwidth: 350px;\nmargin-left: 10px;\nmargin-top: 10px;\nborder-radius: 10px;\n`;\n\nexport const AddButton = styled.button`\nheight: 30px;\nwidth: 150px;\nmargin-top: 10px;\nborder-radius: 10px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {addContact} from 'redux/contacts/operations';\nimport {selectContacts } from 'redux/contacts/selectors';\nimport { Form,Input,AddButton } from \"./ContactForm.styled\";\n\n\n\nconst ContactForm = () => {\n const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n \n  function handleSubmit(event) {\n    event.preventDefault();\n\n    const form = event.target;\n\n    if (\n      contacts.map(contact => contact.name).includes(form.elements.name.value)\n    ) {\n      alert(\n        `${form.elements.name.value} is already in contacts.`\n      );\n    } else {\n      dispatch(\n        addContact({\n          name: form.elements.name.value,\n          phone: form.elements.number.value,\n        })\n      );\n    }\n\n    form.reset();\n  }\n  return (\n    <Form onSubmit={handleSubmit}>\n      <label>\n        Name\n        <Input\n          \n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          \n        />\n      </label>\n      <label>\n        Number\n        <Input\n          \n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          \n        />\n      </label>\n      <AddButton type=\"submit\">Add contact</AddButton>\n     \n    </Form>\n  );\n    }\n\n\nexport default ContactForm;\n\n\n\n\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\nheight: 30px;\nwidth: 150px;\nmargin-left: 10px;\nmargin-top: 10px;\nborder-radius: 10px;\n`;\n\nexport const Label = styled.label`\nwidth:100px;\n`;","import { useSelector, useDispatch } from 'react-redux';\nimport { onFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { Input, Label } from \"./Filter.styled\";\n\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n \n  const inputFilter=(event)=> {\n    dispatch(onFilter(event.currentTarget.value));\n  }\n  return (\n    <Label>\n      Find contacts by name\n      <Input type=\"text\" value={filter} onChange={inputFilter} />\n    </Label>\n  );\n};\n\nexport default Filter;\n\n\n\n\n","import styled from 'styled-components';\n\nexport const Text = styled.div`\n  margin-left: 33vw;\n`;","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport  ContactList  from 'components/ContactList';\nimport  ContactForm  from 'components/ContactForm';\nimport  Filter  from 'components/Filter';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { Text } from './Contacts.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactForm />\n      <Filter />\n      <Text>{isLoading && 'Request in progress...'}</Text>\n      <ContactList />\n    </>\n  );\n}"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","data","contacts","selectFilter","filter","letters","selectIsLoading","isLoading","selectVisibleContacts","normalizedFilter","toLowerCase","contact","includes","Button","styled","phone","dispatch","useDispatch","type","onClick","deleteContact","id","List","Item","useSelector","visibleContacts","Form","Input","AddButton","onSubmit","event","preventDefault","form","target","elements","alert","addContact","number","reset","pattern","title","required","Label","onChange","onFilter","currentTarget","Text","Contacts","useEffect","fetchContacts","ContactList"],"sourceRoot":""}